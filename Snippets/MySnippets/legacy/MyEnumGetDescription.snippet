<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>MyEnumGetDescription</Title>
      <Author>mikenp</Author>
      <Description>
      </Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>
	  MyEnumGetDescription
      </Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>MyEnumGetDescription</ID>
          <ToolTip>Get Enum's Description</ToolTip>
          <Default>
          </Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Delimiter="$"><![CDATA[        
		/// <summary>
        /// Returns the Description Custom Attribute of an Enum
        /// </summary>
        /// <param name="value"></param>
        /// <returns>Description Attribute value as String</returns>
        /// <remarks></remarks>
        public static string GetDescription(this Enum value)
        {
            try
            {
                FieldInfo fi = value.GetType().GetField(value.ToString());
                DescriptionAttribute[] attributes = (DescriptionAttribute[])fi.GetCustomAttributes(typeof(DescriptionAttribute), false);
                return Convert.ToString(((attributes.Length > 0) ? attributes[0].Description : value.ToString()));
            }
            catch (Exception ex)
            {
                Debug.WriteLine(string.Format("{0}: {1}", MethodBase.GetCurrentMethod().Name, ex.ToString()));
                NLogger.Error(string.Format("{0}: {1}", MethodBase.GetCurrentMethod().Name, ex.ToString()));
                //MessageBox.Show(string.Format("{0}: {1}", MethodBase.GetCurrentMethod().Name, ex.ToString()));
                return "";
            }
        }]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>