<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>MyXMLToClassObject</Title>
      <Author>mikenp</Author>
      <Description>
      </Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>
	  MyXMLToClassObject
      </Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>MyXMLToClassObject</ID>
          <ToolTip>Convert a class object to XML if serializable</ToolTip>
          <Default>
          </Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Delimiter="$"><![CDATA[    
		/// <summary>
        /// Class Object From XML
        /// The StringReader will be the stream holder for the existing XML file 
        /// initially deserialized, the data is represented by an object without a defined type 
        /// </summary>
        /// <param name="XMLString"></param>
        /// <returns></returns>
        public static T XMLToClassObject<T>(this string XMLString) where T : new()
        {
            var classObject = new T();
            XmlSerializer oXmlSerializer = new XmlSerializer(classObject.GetType());
            try
            {
                classObject = (T)oXmlSerializer.Deserialize(new StringReader(XMLString));
            }
            catch (Exception ex)
            {
                Debug.WriteLine(string.Format("{0}: {1}", MethodBase.GetCurrentMethod().Name, ex.ToString()));
                NLogger.Error(ex);
            }
            return classObject;
        }

	  ]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>