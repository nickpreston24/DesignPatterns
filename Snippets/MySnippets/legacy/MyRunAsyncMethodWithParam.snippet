<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>MyRunAsyncMethodWithParameter</Title>
      <Author>mikenp</Author>
      <Description>
      </Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>
	  MyRunAsyncMethodWithParameter
      </Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>MyRunAsyncMethodWithParameter</ID>
          <ToolTip>Run a method with a parameter in a backgroundworker and a callback method</ToolTip>
          <Default>
          </Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Delimiter="$"><![CDATA[
		/// <summary>
        /// Run a method asynchronously in its own backgroundworker with one parameter.
        /// Can be used as extension method or normal method.
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <param name="function"></param>
        /// <param name="callback"></param>
        /// <param name="parameter"></param>
        public static void RunAsync<T>(Action<T> function, Action callback, T parameter)
        {
            using(BackgroundWorker worker = new BackgroundWorker())
			{
				worker.RunWorkerCompleted += (s, e) => { callback(); };
				worker.DoWork += (s, e) => { function(parameter); };
				try{worker.RunWorkerAsync();}catch(Exception ex){Debug.WriteLine(ex.Message);}
			}
        }
		]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>